#!/usr/bin/perl

use strict;
use warnings;

my ($database, @keys) = @ARGV;

if (!$database) {
    usage();
}

my $filter;
if ($database eq "passwd") {
    $filter= createFilter("posixAccount", "uid");
}
elsif ($database eq "group") {
    $filter= createFilter("posixGroup", "cn");
}
else {
    usage();
}

my $passwdSearch= "ldapsearch -L -L -L -x -h 127.0.0.1 '$filter'";
my $passwdResult= `$passwdSearch`;

# Hash that will contain key value pairs for each record
my %ei= ();

for (split /^/, $passwdResult) {
    # Store LDIF attribute:value pairs in a hash of arrays.
    if (/^(.*): (.*)/) {
       if ( exists  $ei{$1} ) {
           # Add value to existing array.
           push(@{$ei{$1}}, $2)
       }
       else {
           # Create new value array for this key.
           $ei{$1}=  [$2];
       }
    }
    # A blank line is the record separator.
    elsif (/^$/) {
        printRecord(%ei);
        # Create new empty hash for the next LDIF record.
	%ei= ();
    }
}

sub createFilter {
    my($objectClass, $keyProperty) = @_;

    $filter= "(objectClass=$objectClass)";
    if (scalar @keys != 0) {
        my $keyFilter;
        for my $keyVal (@keys) {
            $keyFilter .= "($keyProperty=$keyVal)";
        }
        $filter= "(&$filter(|$keyFilter))";
    }
    return $filter;
}

sub printRecord {
    my (%ei) = @_;
    
    # for my $attribute ( keys %ei ) {
    #     print "$attribute: @{ $ei{$attribute} }\n";
    # }
    if ($database eq "passwd") {
        # Each print is on a separate line so that the undefined variable
        # can easily be determined from the perl warning message.
        print "$ei{uid}[0]:x:";
        print "$ei{uidNumber}[0]:";
        print "$ei{gidNumber}[0]:";
        if ( $ei{gecos}[0] ) {
            print "$ei{gecos}[0]:";
        }
        else {
            print "$ei{uid}[0]:";
        }
        print "$ei{homeDirectory}[0]:";
        print "$ei{loginShell}[0]\n";
    }
    elsif ($database eq "group") {
        print "$ei{cn}[0]:*:";
        print "$ei{gidNumber}[0]:";
        if (  exists $ei{"memberUid"} ) {
            print join(':', @{$ei{"memberUid"}}),"\n";
        }
    }
}
 
sub usage {
   print "Usage: ldapgetent database [key ...]\n";
   print "Database must be either 'passwd' or 'group'.\n";
   exit;
}

